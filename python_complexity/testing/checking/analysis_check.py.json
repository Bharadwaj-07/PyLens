{
  "fileName": "check.py",
  "fileStats": {
    "loc": 214,
    "comments": 9,
    "blank": 45,
    "commentRatio": 0.04205607476635514
  },
  "complexity": [
    {
      "name": "calculate_statistics",
      "value": 8,
      "type": "function",
      "class": null,
      "issues": [
        "Many parameters (6)"
      ]
    },
    {
      "name": "complex_calculation",
      "value": 7,
      "type": "function",
      "class": null,
      "issues": []
    },
    {
      "name": "compute_values",
      "value": 1,
      "type": "function",
      "class": null,
      "issues": []
    },
    {
      "name": "nested_loops_example",
      "value": 6,
      "type": "function",
      "class": null,
      "issues": []
    },
    {
      "name": "more_complex_function",
      "value": 5,
      "type": "function",
      "class": null,
      "issues": [
        "Many parameters (8)"
      ]
    },
    {
      "name": "add",
      "value": 0,
      "type": "method",
      "class": "SuperCalculator",
      "issues": [
        "Inconsistent method naming (should be snake_case)"
      ]
    },
    {
      "name": "subtract",
      "value": 0,
      "type": "method",
      "class": "SuperCalculator",
      "issues": [
        "Inconsistent method naming (should be snake_case)"
      ]
    },
    {
      "name": "multiply",
      "value": 0,
      "type": "method",
      "class": "SuperCalculator",
      "issues": [
        "Inconsistent method naming (should be snake_case)"
      ]
    },
    {
      "name": "divide",
      "value": 0,
      "type": "method",
      "class": "SuperCalculator",
      "issues": [
        "Inconsistent method naming (should be snake_case)"
      ]
    },
    {
      "name": "power",
      "value": 0,
      "type": "method",
      "class": "SuperCalculator",
      "issues": [
        "Inconsistent method naming (should be snake_case)"
      ]
    },
    {
      "name": "sqrt",
      "value": 0,
      "type": "method",
      "class": "SuperCalculator",
      "issues": [
        "Inconsistent method naming (should be snake_case)"
      ]
    },
    {
      "name": "area",
      "value": 0,
      "type": "method",
      "class": "Shape",
      "issues": [
        "Inconsistent method naming (should be snake_case)"
      ]
    },
    {
      "name": "perimeter",
      "value": 0,
      "type": "method",
      "class": "Shape",
      "issues": [
        "Inconsistent method naming (should be snake_case)"
      ]
    },
    {
      "name": "area",
      "value": 0,
      "type": "method",
      "class": "Rectangle",
      "issues": [
        "Inconsistent method naming (should be snake_case)"
      ]
    },
    {
      "name": "perimeter",
      "value": 0,
      "type": "method",
      "class": "Rectangle",
      "issues": [
        "Inconsistent method naming (should be snake_case)",
        "Dead code",
        "Dead code"
      ]
    },
    {
      "name": "area",
      "value": 0,
      "type": "method",
      "class": "Square",
      "issues": [
        "Inconsistent method naming (should be snake_case)"
      ]
    },
    {
      "name": "volume",
      "value": 0,
      "type": "method",
      "class": "Cube",
      "issues": [
        "Inconsistent method naming (should be snake_case)"
      ]
    }
  ],
  "smells": [
    {
      "type": "Long Functions",
      "count": 0
    },
    {
      "type": "Long Classes",
      "count": 0
    },
    {
      "type": "Many Parameters",
      "count": 2
    },
    {
      "type": "Deep Nesting",
      "count": 0
    },
    {
      "type": "Many Methods",
      "count": 0
    },
    {
      "type": "High Complexity",
      "count": 0
    },
    {
      "type": "Inconsistent Names",
      "count": 12
    },
    {
      "type": "Dead Code",
      "count": 2
    }
  ],
  "maintainabilityIndex": 38.157487221574854,
  "reusabilityScore": 77.0,
  "carbonFootprint": 0.29,
  "deadCode": [
    "Rectangle.perimeter (method)",
    "Rectangle.perimeter (method)"
  ],
  "ownership": {
    "<global>": [
      "calculate_statistics",
      "complex_calculation",
      "compute_values",
      "nested_loops_example",
      "more_complex_function"
    ],
    "SuperCalculator": [
      "__init__",
      "add",
      "subtract",
      "multiply",
      "divide",
      "power",
      "sqrt",
      "get_history"
    ],
    "Shape": [
      "__init__",
      "area",
      "perimeter"
    ],
    "Rectangle": [
      "__init__",
      "area",
      "perimeter"
    ],
    "Square": [
      "__init__",
      "area"
    ],
    "Cube": [
      "__init__",
      "volume"
    ]
  }
}